// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int      @id @default(autoincrement())
  username String   @unique
  name     String
  email    String   @unique
  password String
  verified Boolean? @default(false)

  tasks    Task[]   // Relaci贸n uno a muchos con Task
  comments Comment[] // Relaci贸n uno a muchos con Comment
}

model TaskStatus {
  id     Int     @id @default(autoincrement())
  name   String  @unique

  tasks  Task[]  // Relaci贸n uno a muchos con Task
}

model Task {
  id          Int         @id @default(autoincrement())
  title       String
  description String?
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  statusId    Int
  userId      Int

  user        User        @relation(fields: [userId], references: [id])
  status      TaskStatus  @relation(fields: [statusId], references: [id])
  comments    Comment[]   // Relaci贸n uno a muchos con Comment
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  taskId    Int
  userId    Int

  task      Task     @relation(fields: [taskId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
}
